{"version":3,"sources":["components/AccountBalance/AccountBalance.jsx","components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AppHeader/logo.svg","components/AppHeader/AppHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Balance","styled","div","Section","section","Button","button","BalanceToggleButton","formatter","Intl","NumberFormat","style","currency","AccountBalance","props","buttonText","showBalance","showAccountBalance","format","amount","buttonClass","onClick","handleToggleShowBalance","className","handleBrrrr","Td","td","TdControls","TdName","Coin","coinBalance","balance","name","ticker","price","action","method","event","preventDefault","handleRefresh","tickerId","handleTransaction","Table","table","CoinList","coinData","map","key","Header","header","Logo","img","AppTitle","h1","AppHeader","src","logo","alt","Component","AppDiv","formatPrice","parseFloat","Number","toFixed","App","useState","setBalance","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","tickerUrl","newPrice","newCoinData","values","newValues","oldBalance","oldValue","isBuy","balanceChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4zBAIA,IAAMA,EAAUC,IAAOC,IAAV,KAQPC,EAAUF,IAAOG,QAAV,KAQPC,EAASJ,IAAOK,OAAV,KAINC,EAAsBN,YAAOI,EAAPJ,CAAH,KAIrBO,EAAYC,KAAKC,aAAa,QAAS,CACvCC,MAAO,WACPC,SAAU,QAGC,SAASC,EAAeC,GAEnC,IAAMC,EAAaD,EAAME,YAAc,eAAiB,eAClDC,EAAqBH,EAAME,YAAc,iCAAOR,EAAUU,OAAOJ,EAAMK,QAA9B,OAAiD,OAC1FC,EAAc,QAAUN,EAAME,YAAc,cAAgB,YAClE,OACI,qCACI,cAAChB,EAAD,UAAUiB,IACV,eAACd,EAAD,WACI,cAACI,EAAD,CACIc,QAASP,EAAMQ,wBACfC,UAAWH,EAFf,SAGSL,IAET,cAACV,EAAD,CAAQkB,UAAU,kBACVF,QAASP,EAAMU,YADvB,SAEI,mBAAGD,UAAU,8B,kbC7CjC,IAAME,EAAKxB,IAAOyB,GAAV,KAKFC,EAAa1B,YAAOwB,EAAPxB,CAAH,KAIV2B,EAAS3B,YAAOwB,EAAPxB,CAAH,KAINI,EAASJ,IAAOK,OAAV,KAMG,SAASuB,EAAKf,GAE1B,IAgBKgB,EAAc,cAACL,EAAD,UAAKX,EAAME,YAAcF,EAAMiB,QAAS,MAC1D,OACI,+BACI,cAACH,EAAD,UAASd,EAAMkB,OACf,cAACP,EAAD,UAAKX,EAAMmB,SACX,eAACR,EAAD,eAAMX,EAAMoB,SACXJ,EACD,cAACH,EAAD,UACI,uBAAMQ,OAAO,IAAIC,OAAO,OAAxB,UACI,cAAC,EAAD,CAAQb,UAAU,eAAeF,QAzB5B,SAACgB,GAEnBA,EAAMC,iBACNxB,EAAMyB,cAAczB,EAAM0B,WAsBb,qBAGA,cAAC,EAAD,CAAQjB,UAAU,kBAAkBF,QAvBnC,SAACgB,GAEfA,EAAMC,iBACNxB,EAAM2B,mBAAkB,EAAM3B,EAAM0B,WAoBvB,iBAGA,cAAC,EAAD,CAAQjB,UAAU,iBAAiBF,QArBjC,SAACgB,GAEhBA,EAAMC,iBACNxB,EAAM2B,mBAAkB,EAAO3B,EAAM0B,WAkBxB,0B,6FCpDpB,IAAME,EAAQzC,IAAO0C,MAAV,KAII,SAASC,EAAS9B,GAE/B,OACI,eAAC4B,EAAD,CAAOnB,UAAU,qCAAjB,UACA,gCACE,+BACE,sCACA,wCACA,uCACA,yCACA,8CAGJ,gCAEIT,EAAM+B,SAASC,KAAK,gBAAEC,EAAF,EAAEA,IAAKf,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,MAAOH,EAA5B,EAA4BA,QAA5B,OACpB,cAACF,EAAD,CACAU,cAAezB,EAAMyB,cACrBE,kBAAmB3B,EAAM2B,kBACzBT,KAAMA,EACNC,OAAQA,EACRjB,YAAaF,EAAME,YACnBe,QAASA,EACTG,MAAOA,EACPM,SAAUO,GARCA,W,oCCxBN,MAA0B,iC,siBCIzC,IAAMC,EAAS/C,IAAOgD,OAAV,KAUNC,EAAOjD,IAAOkD,IAAV,KAIJC,EAAWnD,IAAOoD,GAAV,KAOOC,E,uKAEb,OACI,eAACN,EAAD,WACA,cAACE,EAAD,CAAMK,IAAKC,EAAMC,IAAI,eACrB,cAACL,EAAD,mC,GAL2BM,a,oLCbvC,IAAMC,EAAS1D,IAAOC,IAAV,KAON0D,EAAc,SAAA1B,GAAK,OAAI2B,WAAWC,OAAO5B,GAAO6B,QAAQ,KAoF/CC,OAlFf,SAAalD,GAAQ,IAAD,EACYmD,mBAAS,KADrB,mBACXlC,EADW,KACFmC,EADE,OAEoBD,oBAAS,GAF7B,mBAEXjD,EAFW,KAEEmD,EAFF,OAGcF,mBAAS,IAHvB,mBAGXpB,EAHW,KAGDuB,EAHC,KAKZC,EAAiB,uCAAG,oCAAAC,EAAA,sEACDC,IAAMC,IAAI,wCADT,cAClBC,EADkB,OAElBC,EAAUD,EAASE,KAAKC,MAAM,EAVrB,IAUoC9B,KAAI,SAAA+B,GAAI,OAAIA,EAAKC,MAClD,0CACZC,EAAWL,EAAQ5B,KAAI,SAAAgC,GAAE,OAAIP,IAAMC,IADvB,0CACuCM,MAJjC,SAKDE,QAAQC,IAAIF,GALX,OAKlBlC,EALkB,OAMlBqC,EAAgBrC,EAASC,KAAI,SAAS2B,GAC1C,IAAMI,EAAOJ,EAASE,KACtB,MAAO,CACL5B,IAAK8B,EAAKC,GACV9C,KAAM6C,EAAK7C,KACXC,OAAQ4C,EAAKM,OACbpD,QAAS,EACTG,MAAO0B,EAAYiB,EAAKO,OAAOC,IAAInD,WAIvCkC,EAAYc,GAjBY,4CAAH,qDAoBvBI,qBAAU,WACgB,IAApBzC,EAAS0C,QACXlB,OAIJ,IAqBM9B,EAAa,uCAAG,WAAOiD,GAAP,qBAAAlB,EAAA,6DACdmB,EADc,iDACwCD,GADxC,SAEGjB,IAAMC,IAAIiB,GAFb,OAEdhB,EAFc,OAGdiB,EAAW9B,EAAYa,EAASE,KAAKS,OAAOC,IAAInD,OAChDyD,EAAc9C,EAASC,KAAK,SAAS8C,GACzC,IAAIC,EAAS,eAAOD,GAIpB,OAHIJ,IAAkBI,EAAO7C,MAC3B8C,EAAU3D,MAAQwD,GAEbG,KAETzB,EAAYuB,GAXQ,2CAAH,sDAanB,OACE,eAAChC,EAAD,WACE,cAAC,EAAD,IACA,cAAC9C,EAAD,CACEM,OAAQY,EACRf,YAAaA,EACbQ,YAxCc,WAClB0C,GAAY,SAAA4B,GAAU,OAAIA,EAAa,SAwCnCxE,wBArC0B,WAC9B6C,GAAe,SAAA4B,GAAQ,OAAKA,QAqC1B,cAACnD,EAAD,CACEC,SAAUA,EACV7B,YAAaA,EACbuB,cAAeA,EACfE,kBAtCoB,SAACuD,EAAOR,GAChC,IAAIS,EAAgBD,EAAQ,GAAK,EAC3BL,EAAc9C,EAASC,KAAK,SAAS8C,GACzC,IAAIC,EAAS,eAAOD,GAKpB,OAJIJ,IAAkBI,EAAO7C,MAC3B8C,EAAU9D,SAAWkE,EACrB/B,GAAY,SAAA4B,GAAU,OAAIA,EAAaG,EAAgBJ,EAAU3D,UAE5D2D,KAETzB,EAAYuB,UC1DDO,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.b9d6a115.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Balance = styled.div`\r\n    min-width: 250px;\r\n    margin: 0.5rem 0 0 2.5rem;\r\n    font-size: 1.5em;\r\n    vertical-align: middle;\r\n    text-align: left;\r\n`;\r\n\r\nconst Section = styled.section`\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n    line-height: 3rem;\r\n    display: inline-block;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    margin: 0 8px;\r\n`;\r\n\r\nconst BalanceToggleButton = styled(Button)`\r\n    width: 150px;\r\n`;\r\n\r\nvar formatter = Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD'\r\n});\r\n\r\nexport default function AccountBalance(props) {\r\n    \r\n    const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\r\n    const showAccountBalance = props.showBalance ? <span>{formatter.format(props.amount)} </span> : '\\u00A0';\r\n    const buttonClass = 'btn ' + (props.showBalance ? 'btn-warning' : 'btn-info');\r\n    return (\r\n        <>\r\n            <Balance>{showAccountBalance}</Balance>\r\n            <Section>\r\n                <BalanceToggleButton\r\n                    onClick={props.handleToggleShowBalance} \r\n                    className={buttonClass}>\r\n                        {buttonText}\r\n                </BalanceToggleButton>\r\n                <Button className='btn btn-success'\r\n                        onClick={props.handleBrrrr}>\r\n                    <i className=\"fas fa-helicopter\"></i>\r\n                </Button>\r\n            </Section>\r\n        </>\r\n    );\r\n}\r\n\r\nAccountBalance.propTypes = {\r\n    amount: PropTypes.number.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Td = styled.td`\r\n    border: 1px solid #cccccc;\r\n    width: 14vw;\r\n`;\r\n\r\nconst TdControls = styled(Td)`\r\n    width: 34vw;\r\n`;\r\n\r\nconst TdName = styled(Td)`\r\n    width: 24vw;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    font-size: 11px;\r\n    width: 64px;\r\n    margin: 3px 5px 0;\r\n`;\r\n\r\nexport default function Coin(props) {\r\n    \r\n   const handleRefresh = (event) => {\r\n       // Prevent the default action of submitting the form\r\n       event.preventDefault();\r\n       props.handleRefresh(props.tickerId);\r\n   }\r\n   const handleBuy = (event) => {\r\n       // Prevent the default action of submitting the form\r\n       event.preventDefault();\r\n       props.handleTransaction(true, props.tickerId);\r\n   }\r\n   const handleSell = (event) => {\r\n       // Prevent the default action of submitting the form\r\n       event.preventDefault();\r\n       props.handleTransaction(false, props.tickerId);\r\n   }\r\n  \r\n    let coinBalance = <Td>{props.showBalance ? props.balance: '-'}</Td>;\r\n    return (\r\n        <tr>\r\n            <TdName>{props.name}</TdName>\r\n            <Td>{props.ticker}</Td>\r\n            <Td>${props.price}</Td>\r\n            {coinBalance}\r\n            <TdControls>\r\n                <form action=\"#\" method=\"POST\">\r\n                    <Button className='btn btn-info' onClick={handleRefresh}>\r\n                        Refresh\r\n                    </Button>\r\n                    <Button className='btn btn-warning' onClick={handleBuy}>\r\n                        Buy\r\n                    </Button>\r\n                    <Button className='btn btn-danger' onClick={handleSell}>\r\n                        Sell\r\n                    </Button>\r\n                </form>\r\n            </TdControls>\r\n        </tr>\r\n    );\r\n    \r\n}\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    balance: PropTypes.number.isRequired\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Coin from '../Coin/Coin';\r\n\r\nconst Table = styled.table`\r\n    font-size: 1rem;\r\n`;\r\n\r\nexport default function CoinList(props) {\r\n    \r\n  return (\r\n      <Table className=\"table table-primary table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Ticker</th>\r\n          <th>Price</th>\r\n          <th>Balance</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          props.coinData.map( ({key, name, ticker, price, balance}) => \r\n          <Coin key={key} \r\n          handleRefresh={props.handleRefresh}\r\n          handleTransaction={props.handleTransaction}\r\n          name={name} \r\n          ticker={ticker} \r\n          showBalance={props.showBalance}\r\n          balance={balance}\r\n          price={price}\r\n          tickerId={key} />\r\n          )\r\n        }\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport logo from './logo.svg';\r\n\r\nconst Header = styled.header`\r\n    background-color: #282c34;\r\n    min-height: 10vh;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: white;\r\n`;\r\nconst Logo = styled.img`\r\n    height: 8rem;\r\n    pointer-events: none;\r\n`;\r\nconst AppTitle = styled.h1`\r\n    font-size: 3rem;\r\n    line-height: 8rem;\r\n    fold-weight: bold;\r\n    min-width: 300px;\r\n`;\r\n\r\nexport default class AppHeader extends Component {\r\n    render() {\r\n        return (\r\n            <Header>\r\n            <Logo src={logo} alt=\"React logo\" />\r\n            <AppTitle>Coin Exchange</AppTitle>\r\n          </Header>\r\n        );\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport CoinList from './components/CoinList/CoinList';\nimport AppHeader from './components/AppHeader/AppHeader';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\n\nimport '@fortawesome/fontawesome-free/js/all';\n\nconst AppDiv = styled.div`\n  text-align: center;\n  background-color: rgb(71, 71, 199);\n  color: #cccccc;\n`;\n\nconst COIN_COUNT = 10;\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\nfunction App(props) {\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(false);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(response) {\n      const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes.USD.price),\n      };\n    });\n    // Retrieve the prices\n    setCoinData(coinPriceData);\n  }\n\n  useEffect(function() {\n    if (coinData.length === 0) {\n      componentDidMount();\n    } \n  });\n\n  const handleBrrrr = () => {\n    setBalance( oldBalance => oldBalance + 1200 );\n  }\n\n  const handleToggleShowBalance = () => {\n    setShowBalance(oldValue => !oldValue);\n  }\n\n  const handleTransaction = (isBuy, valueChangeId) => {\n    var balanceChange = isBuy ? 1 : -1;\n    const newCoinData = coinData.map( function(values) {\n      let newValues = {...values};\n      if (valueChangeId === values.key) {\n        newValues.balance += balanceChange;\n        setBalance( oldBalance => oldBalance - balanceChange * newValues.price);\n      }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  }\n \n  const handleRefresh = async (valueChangeId) => {\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n    const response = await axios.get(tickerUrl);\n    const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newCoinData = coinData.map( function(values) {\n      let newValues = {...values};\n      if (valueChangeId === values.key){\n        newValues.price = newPrice;\n      }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  }\n  return (\n    <AppDiv>\n      <AppHeader />\n      <AccountBalance \n        amount={balance}  \n        showBalance={showBalance} \n        handleBrrrr={handleBrrrr}\n        handleToggleShowBalance={handleToggleShowBalance} />\n      <CoinList \n        coinData={coinData} \n        showBalance={showBalance} \n        handleRefresh={handleRefresh}\n        handleTransaction={handleTransaction} />\n    </AppDiv>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}