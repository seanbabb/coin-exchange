{"version":3,"sources":["components/AccountBalance/AccountBalance.jsx","components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AppHeader/logo.svg","components/AppHeader/AppHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Section","styled","section","AccountBalance","props","buttonText","showBalance","showAccountBalance","amount","onClick","event","preventDefault","handleToggleShowBalance","Td","td","Coin","coinBalance","balance","name","ticker","price","action","method","handleRefresh","tickerId","Table","table","CoinList","coinData","map","key","Header","header","Logo","img","AppTitle","h1","AppHeader","src","logo","alt","Component","AppDiv","div","formatPrice","parseFloat","Number","toFixed","App","useState","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","tickerUrl","newPrice","newCoinData","values","newValues","oldValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d738c1e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section`\r\n    font-size: 2rem;\r\n    text-align: left;\r\n    padding: 1.5rem 0 1.5rem 5rem;\r\n`;\r\n\r\nexport default function AccountBalance(props) {\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        props.handleToggleShowBalance();\r\n    }\r\n    const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\r\n    const showAccountBalance = props.showBalance ? <span>Balance: ${props.amount} </span> : null;\r\n    return (\r\n        <Section>\r\n            {showAccountBalance}\r\n            <button onClick={handleClick} >{buttonText}</button>\r\n        </Section>\r\n    );\r\n}\r\n\r\nAccountBalance.propTypes = {\r\n    amount: PropTypes.number.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Td = styled.td`\r\n    border: 1px solid #cccccc;\r\n    width: 25vh;\r\n`;\r\n\r\nexport default function Coin(props) {\r\n    \r\n   const handleClick = (event) => {\r\n       // Prevent the default action of submitting the form\r\n       event.preventDefault();\r\n       props.handleRefresh(props.tickerId);\r\n   }\r\n  \r\n    let coinBalance = props.showBalance ? <Td>{props.balance}</Td> : null;\r\n    return (\r\n        <tr>\r\n            <Td>{props.name}</Td>\r\n            <Td>{props.ticker}</Td>\r\n            <Td>${props.price}</Td>\r\n            {coinBalance}\r\n            <Td>\r\n                <form action=\"#\" method=\"POST\">\r\n                    <button onClick={handleClick}>Refresh</button>\r\n                </form>\r\n            </Td>\r\n        </tr>\r\n    );\r\n    \r\n}\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    balance: PropTypes.number.isRequired\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Coin from '../Coin/Coin';\r\n\r\nconst Table = styled.table`\r\n    margin: 50px auto 50px auto;\r\n    display: inline-block;\r\n    font-size: 1.4rem;\r\n`;\r\n\r\nexport default function CoinList(props) {\r\n    \r\n  let coinBalance = props.showBalance ? <th>Balance</th> : null;\r\n  return (\r\n      <Table>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Ticker</th>\r\n          <th>Price</th>\r\n          {coinBalance}\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          props.coinData.map( ({key, name, ticker, price, balance}) => \r\n          <Coin key={key} \r\n          handleRefresh={props.handleRefresh}\r\n          name={name} \r\n          ticker={ticker} \r\n          showBalance={props.showBalance}\r\n          balance={balance}\r\n          price={price}\r\n          tickerId={key} />\r\n          )\r\n        }\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport logo from './logo.svg';\r\n\r\nconst Header = styled.header`\r\n    background-color: #282c34;\r\n    min-height: 20vh;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: white;\r\n`;\r\nconst Logo = styled.img`\r\n    height: 8rem;\r\n    pointer-events: none;\r\n`;\r\nconst AppTitle = styled.h1`\r\nfont-size: 4rem;\r\n`;\r\n\r\nexport default class AppHeader extends Component {\r\n    render() {\r\n        return (\r\n            <Header>\r\n            <Logo src={logo} alt=\"React logo\" />\r\n            <AppTitle>Coin Exchange</AppTitle>\r\n          </Header>\r\n        );\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport CoinList from './components/CoinList/CoinList';\nimport AppHeader from './components/AppHeader/AppHeader';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst AppDiv = styled.div`\n  text-align: center;\n  background-color: rgb(71, 71, 199);\n  color: #cccccc;\n`;\n\nconst COIN_COUNT = 10;\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\nfunction App(props) {\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(response) {\n      const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes.USD.price),\n      };\n    });\n    // Retrieve the prices\n    setCoinData(coinPriceData);\n  }\n\n  useEffect(function() {\n    if (coinData.length === 0) {\n      componentDidMount();\n    } \n  });\n\n  const handleToggleShowBalance = () => {\n    setShowBalance(oldValue => !oldValue);\n  }\n \n  const handleRefresh = async (valueChangeId) => {\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n    const response = await axios.get(tickerUrl);\n    const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newCoinData = coinData.map( function(values) {\n      let newValues = {...values};\n      if (valueChangeId === values.key){\n        newValues.price = newPrice;\n      }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  }\n  return (\n    <AppDiv>\n      <AppHeader />\n      <AccountBalance \n        amount={balance}  \n        showBalance={showBalance} \n        handleToggleShowBalance={handleToggleShowBalance} />\n      <CoinList \n        coinData={coinData} \n        showBalance={showBalance} \n        handleRefresh={handleRefresh} />\n    </AppDiv>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}